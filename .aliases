#!/bin/bash

# signing commits if no GUI
export GPG_TTY=$(tty)

# common bin paths
export PATH=$PATH:$HOME/.bin
export PATH=$PATH:$HOME/.bin/go/bin
export PATH=$PATH:$HOME/.bin/neovim/bin
export PATH=$PATH:$HOME/.cargo/bin
[ -d "$HOME/.bin/node-v*-linux-x64" ] && export PATH=$PATH:$(ls -d $HOME/.bin/node-v*-linux-x64)/bin

[ -x nvim ] && FCEDIT=nvim || FCEDIT=vim
[ -x nvim ] && export EDITOR=nvim || export EDITOR=vim

# HERE WE GO
type nvim > /dev/null 2>&1 && alias vim=nvim

alias ls="ls --color=auto"
alias ll="ls -lrth"
alias l="ll"
alias sl="ls"
alias dc="cd"
alias grep="grep --color=auto"
alias diff="diff --color=auto"
alias tree="tree -C"
alias rl="readlink -f"
alias fdate='date "+%Y-%m-%d %H:%M"'

alias docker="sudo docker"
alias gitcfg="git config user.name \"Brendan Schlaman\" && git config user.email \"brendan.schlaman@gmail.com\""
alias gl="git log -m -3 --pretty=format:\"Commit Hash: %h Author: %an <%ae> Date: %cd\""
alias glp="git log --graph --oneline -n 20"
alias tf="terraform"
alias tmux="tmux -u"
alias mem="ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head"

alias src="source ~/.bash_profile"
alias vp="vim -S ~/.vim_sessions/profiles.vim"
alias vvrc="vim ~/.vimrc"
alias vrc="vim ~/.bashrc"

# helpful arch / i3 stuff
alias bat="cat /sys/class/power_supply/BAT1/capacity"
alias i3r="i3-msg restart"
alias lock="i3lock -c 000000"
alias num="xset q | grep \"Num Lock\" | awk '{ print \$8 }'"
alias fonts="fc-list | cut -d: -f2 | sort | uniq"
alias restartx="ps -ef | grep xinit | grep -v grep | awk '{print $2}' | xargs kill"

#############
# Functions #
#############

function yel(){
	local yellow="\e[33m"
	local reset="\e[0m"
	echo ${yellow}$*${reset}
}
# Outputs a number between 0 and $1 ; 10 by default
function rand(){
	def=10
	[ $# -gt 0 ] && ! [ $1 -lt 1 ] && def=$1 || return
	echo $(( RANDOM % def ))
	# Also valid shell randomizer:
	# shuf -i 0-$def -n 1
}
function setwall(){
	[ $# -ne 1 ] && return
	FULLPATH=`realpath $1`
	feh --bg-scale $FULLPATH
}
function wifistop(){
    active=`netctl list | grep \* | sed 's/* \([^\s]\+\)/\1/'`
    if [ ! -z "$active" ] ; then
        echo Stopping $active
        sudo netctl stop $active
    fi
}
function linuxcomp(){
	for d in ~/main/hax/linux_files ~/Documents/linuxfiles ~/linuxfiles; do
		[ -d $d ] && { dir=$d; break; }
	done
	dir="${dir:-.}"

	for x in `find $dir -maxdepth 1 -name ".*" -and -not -type d -printf "%P\n"` ; do
		echo -e "### $(yel ${x}) ###"
		if [ "$WAYLAND_DISPLAY" ] && { [ "$x" = ".xinitrc" ] || [ "$x" = ".Xresources" ]; }; then
			echo -e "Wayland: skipping $x"
			continue
		fi
		[ ! -e ~/$x ] && { echo "~/$x doesn't exist; skipping"; continue; }
		diff ~/$x $dir/$x
	done
	for x in `find $dir/.config -type f -printf "%P\n"` ; do
		x=".config/$x"
		echo -e "### $(yel ${x}) ###"
		[ ! -e ~/$x ] && { echo "~/$x doesn't exist; skipping"; continue; }
		diff ~/$x $dir/$x
	done
}
function comptonset(){
    [ -f ~/.config/compton/compton.conf ] && \
    lspci | grep -i virtualbox > /dev/null && \
    echo "You are in a VBox guest. Turning off compton vsync..." && \
    sed -i '/vsync =/s/true/false/' ~/.config/compton/compton.conf \ ||
    echo "You are not in a VBox guest; nothing to do." 
}
function slideshow(){
    [ "$1" = "-r" ] && feh -dz -. -B black || feh -d -. -B black
}
